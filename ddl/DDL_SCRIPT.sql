--Create database object 
CREATE DATABASE WEATHER;

--Create Schema object
CREATE SCHEMA IF NOT EXISTS WEATHER.PROD_WEATHER_BRONZE;
CREATE SCHEMA IF NOT EXISTS WEATHER.PROD_WEATHER_SILVER;
CREATE SCHEMA IF NOT EXISTS WEATHER.PROD_WEATHER_GOLD;

--Create Table object

--RAW_WEATHER - To load the raw data from API in JSON format
CREATE OR REPLACE TABLE WEATHER.PROD_WEATHER_BRONZE.RAW_WEATHER(
    COLUMN_1 VARIANT
);

--INT_WEATHER - Intermediate table to parse the JSON data from RAW_WEATHER in structured format
CREATE OR REPLACE TRANSIENT TABLE WEATHER.PROD_WEATHER_SILVER.INT_WEATHER (
	PARAMETER VARCHAR(16777216),
	LATITUDE FLOAT,
	LONGITUDE FLOAT,
	DATE VARCHAR(16777216),
	VALUE VARCHAR(16777216)
);

--DIM_DATE 
CREATE OR REPLACE TRANSIENT TABLE WEATHER.PROD_WEATHER_GOLD.DIM_DATE (
	DATE DATE,
	YEAR NUMBER(4,0),
	MONTH NUMBER(2,0),
	DAY NUMBER(2,0),
	DAY_NAME VARCHAR(3),
	DAY_OF_WEEK NUMBER(2,0),
	WEEK_OF_YEAR NUMBER(2,0),
	IS_WEEKEND VARCHAR(7)
);

--DIM_LOCATION
CREATE OR REPLACE TRANSIENT TABLE WEATHER.PROD_WEATHER_GOLD.DIM_LOCATION (
	LOCATION_ID VARCHAR(32),
	CITY VARCHAR(16777216),
	COUNTRY VARCHAR(16777216),
	LATITUDE FLOAT,
	LONGITUDE FLOAT
);

--DIM_WEATHER_CONDITION
CREATE OR REPLACE TRANSIENT TABLE WEATHER.PROD_WEATHER_GOLD.DIM_WEATHER_CONDITION (
	WEATHER_SYMBOL_ID NUMBER(38,0),
	SYMBOL_DESCRIPTION VARCHAR(16777216)
);

--FCT_WEATHER
CREATE OR REPLACE TRANSIENT TABLE WEATHER.PROD_WEATHER_GOLD.FCT_WEATHER (
	WEATHER_ID VARCHAR(32),
	LOCATION_ID VARCHAR(32),
	DATE VARCHAR(16777216),
	WEATHER_SYMBOL_ID VARCHAR(16777216),
	MIN_TEMPERATURE VARCHAR(16777216),
	MAX_TEMPERATURE VARCHAR(16777216),
	PRECIPITATION VARCHAR(16777216),
	WIND_SPEED VARCHAR(16777216),
	WIND_DIRECTION VARCHAR(16777216),
	SUNRISE VARCHAR(16777216),
	SUNSET VARCHAR(16777216),
	UV_INDEX VARCHAR(16777216)
);
